//------------------------------------------------------------------------
// ● 使用ライブラリの宣言
//------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
//========================================================================
// ■ State_Loitering_Enemy
//------------------------------------------------------------------------
//	敵の徘徊状態クラス。
//========================================================================

public class State_Loitering_Enemy : State_Loitering_Entity {
	//--------------------------------------------------------------------
	// ● メンバ変数
	//--------------------------------------------------------------------
	new Enemy ai;
	//--------------------------------------------------------------------
	// ● コンストラクタ
	//--------------------------------------------------------------------
	public State_Loitering_Enemy() : base() {
	}
	//--------------------------------------------------------------------
	// ● 初期化
	//--------------------------------------------------------------------
	public override void initialize() {
		next_state = new State_Wait_Enemy(
			1, Random.Range(3, 8), new State_Loitering_Enemy() );
		next_wait_second = Random.Range(30, 60);

		base.initialize();

		ai = (Enemy)base.ai;
	}
	//--------------------------------------------------------------------
	// ● 更新
	//--------------------------------------------------------------------
	public override void update() {
		base.update();
	}
	//--------------------------------------------------------------------
	// ● 次の状態を判定
	//--------------------------------------------------------------------
	public override void check_next_state() {
		base.check_next_state();
		

		// 発見している場合、接近状態に遷移
		Vector3 position;
		if ( is_sighting( search_enemies(), out position) ) {
			target_position = position;
			ai.fsm.change( new State_Chase_Enemy() );
		}
	}
	//--------------------------------------------------------------------
	// ● 衝突情報を受信
	//--------------------------------------------------------------------
	public override void receive_collision_data(ref Collision_Data data) {
		base.receive_collision_data(ref data);
	}
}